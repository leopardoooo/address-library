<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yaochen.address.data.mapper.address.AdTreeChangeDetailMapper" >
  <resultMap id="BaseResultMap" type="com.yaochen.address.data.domain.address.AdTreeChangeDetail" >
    <id column="detail_id" property="detailId" jdbcType="INTEGER" />
    <result column="change_sn" property="changeSn" jdbcType="INTEGER" />
    <result column="addr_level" property="addrLevel" jdbcType="INTEGER" />
    <result column="change_type" property="changeType" jdbcType="VARCHAR" />
    <result column="change_cause" property="changeCause" jdbcType="VARCHAR" />
    <result column="change_optr_id" property="changeOptrId" jdbcType="VARCHAR" />
    <result column="change_done_code" property="changeDoneCode" jdbcType="INTEGER" />
    <result column="change_time" property="changeTime" jdbcType="TIMESTAMP" />
    <result column="addr_id" property="addrId" jdbcType="INTEGER" />
    <result column="old_value" property="oldValue" jdbcType="VARCHAR" />
    <result column="new_value" property="newValue" jdbcType="VARCHAR" />
    <result column="addr_pid" property="addrPid" jdbcType="INTEGER" />
    <result column="str1" property="str1" jdbcType="VARCHAR" />
    <result column="addr_name" property="addrName" jdbcType="VARCHAR" />
    <result column="column_name" property="columnName" jdbcType="VARCHAR" />
    <result column="column_desc" property="columnDesc" jdbcType="VARCHAR" />
    <!-- 下面两个字段仅作查询使用 -->
    <result column="change_optr_name" property="changeOptrName" jdbcType="VARCHAR" />
    <result column="level_name" property="levelName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    detail_id, change_sn, addr_level, change_type, change_cause, change_optr_id, change_done_code, str1,addr_name,
    change_time, addr_id, old_value, new_value, column_name, column_desc,addr_pid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ad_tree_change_detail
    where detail_id = #{detailId,jdbcType=INTEGER}
  </select>
  <!-- queryLogDetail -->
  <select id="queryLogDetail" resultMap="BaseResultMap" parameterType="com.yaochen.address.dto.db.LogQueryForm" >
    SELECT t.addr_name, u.username change_optr_name,l.level_name ,t.str1,t.detail_id,t.change_sn,t.addr_level,t.addr_pid,t.change_type,t.change_cause,t.change_optr_id,t.change_done_code,t.change_time,t.addr_id,t.old_value,t.new_value,t.column_name,t.column_desc
		 from ad_tree_change_detail t , ad_level l ,ad_sys_user u
		where t.change_optr_id = u.userid and l.level_num = t.addr_level 
    
    <if test="pid != null"> and t.addr_pid = #{pid,jdbcType=VARCHAR} </if>
    <if test="addrId != null"> and t.addr_id = #{addrId,jdbcType=VARCHAR} </if>
	<if test="startDate != null and startDate != '' " > and  t.change_time >= #{startDate,jdbcType=VARCHAR} </if>
	<if test="endDate != null and startDate != ''  " > and  t.change_time &lt;= #{endDate,jdbcType=VARCHAR} </if>
	<if test="addrName != null and addrName != '' " > and  t.addr_name like '%${addrName}%' </if>
	<if test="changeType != null and changeType != '' " > and  t.change_type = #{changeType,jdbcType=VARCHAR} </if>
	<if test="oldValue != null and oldValue != '' " > and  t.old_value like '%${oldValue}%' </if>
	<if test="newValue != null and newValue != '' " > and  t.new_value like '%${newValue}%' </if>
	<if test="changeOptrId != null and changeOptrId != '' " > and  t.change_optr_id = #{changeOptrId,jdbcType=VARCHAR} </if>
	<if test="level != null and level != '' " > and  t.addr_level = #{level,jdbcType=VARCHAR} </if>
    
    ORDER BY t.detail_id DESC
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ad_tree_change_detail
    where detail_id = #{detailId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yaochen.address.data.domain.address.AdTreeChangeDetail" >
    insert into ad_tree_change_detail (detail_id, change_sn, addr_level, 
      change_type, change_cause, change_optr_id, 
      change_done_code, change_time, addr_id, 
      old_value, new_value, column_name, 
      column_desc,str1,addr_name,addr_pid)
    values (#{detailId,jdbcType=INTEGER}, #{changeSn,jdbcType=INTEGER}, #{addrLevel,jdbcType=INTEGER}, 
      #{changeType,jdbcType=VARCHAR}, #{changeCause,jdbcType=VARCHAR}, #{changeOptrId,jdbcType=VARCHAR}, 
      #{changeDoneCode,jdbcType=INTEGER}, #{changeTime,jdbcType=TIMESTAMP}, #{addrId,jdbcType=INTEGER}, 
      #{oldValue,jdbcType=VARCHAR}, #{newValue,jdbcType=VARCHAR}, #{columnName,jdbcType=VARCHAR}, 
      #{columnDesc,jdbcType=VARCHAR},#{str1,jdbcType=VARCHAR},#{addrName,jdbcType=VARCHAR}
      , #{addrPid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yaochen.address.data.domain.address.AdTreeChangeDetail" >
    insert into ad_tree_change_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="detailId != null" >
        detail_id,
      </if>
      <if test="changeSn != null" >
        change_sn,
      </if>
      <if test="addrLevel != null" >
        addr_level,
      </if>
      <if test="changeType != null" >
        change_type,
      </if>
      <if test="changeCause != null" >
        change_cause,
      </if>
      <if test="changeOptrId != null" >
        change_optr_id,
      </if>
      <if test="changeDoneCode != null" >
        change_done_code,
      </if>
      <if test="changeTime != null" >
        change_time,
      </if>
      <if test="addrId != null" >
        addr_id,
      </if>
      <if test="oldValue != null" >
        old_value,
      </if>
      <if test="newValue != null" >
        new_value,
      </if>
      <if test="columnName != null" >
        column_name,
      </if>
      <if test="columnDesc != null" >
        column_desc,
      </if>
      <if test="str1 != null" >
        str1,
      </if>
      <if test="addrName != null" >
        addr_name,
      </if>
      <if test="addrPid != null" >
        addr_pid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="detailId != null" >
        #{detailId,jdbcType=INTEGER},
      </if>
      <if test="changeSn != null" >
        #{changeSn,jdbcType=INTEGER},
      </if>
      <if test="addrLevel != null" >
        #{addrLevel,jdbcType=INTEGER},
      </if>
      <if test="changeType != null" >
        #{changeType,jdbcType=VARCHAR},
      </if>
      <if test="changeCause != null" >
        #{changeCause,jdbcType=VARCHAR},
      </if>
      <if test="changeOptrId != null" >
        #{changeOptrId,jdbcType=VARCHAR},
      </if>
      <if test="changeDoneCode != null" >
        #{changeDoneCode,jdbcType=INTEGER},
      </if>
      <if test="changeTime != null" >
        #{changeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addrId != null" >
        #{addrId,jdbcType=INTEGER},
      </if>
      <if test="oldValue != null" >
        #{oldValue,jdbcType=VARCHAR},
      </if>
      <if test="newValue != null" >
        #{newValue,jdbcType=VARCHAR},
      </if>
      <if test="columnName != null" >
        #{columnName,jdbcType=VARCHAR},
      </if>
      <if test="columnDesc != null" >
        #{columnDesc,jdbcType=VARCHAR},
      </if>
      <if test="str1 != null" >
        #{str1,jdbcType=VARCHAR},
      </if>
      <if test="addrName != null" >
      	#{addrName,jdbcType=VARCHAR},
      </if>
      <if test="addrPid != null" >
       	#{addrPid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yaochen.address.data.domain.address.AdTreeChangeDetail" >
    update ad_tree_change_detail
    <set >
      <if test="changeSn != null" >
        change_sn = #{changeSn,jdbcType=INTEGER},
      </if>
      <if test="addrLevel != null" >
        addr_level = #{addrLevel,jdbcType=INTEGER},
      </if>
      <if test="changeType != null" >
        change_type = #{changeType,jdbcType=VARCHAR},
      </if>
      <if test="changeCause != null" >
        change_cause = #{changeCause,jdbcType=VARCHAR},
      </if>
      <if test="changeOptrId != null" >
        change_optr_id = #{changeOptrId,jdbcType=VARCHAR},
      </if>
      <if test="changeDoneCode != null" >
        change_done_code = #{changeDoneCode,jdbcType=INTEGER},
      </if>
      <if test="changeTime != null" >
        change_time = #{changeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addrId != null" >
        addr_id = #{addrId,jdbcType=INTEGER},
      </if>
      <if test="oldValue != null" >
        old_value = #{oldValue,jdbcType=VARCHAR},
      </if>
      <if test="newValue != null" >
        new_value = #{newValue,jdbcType=VARCHAR},
      </if>
      <if test="columnName != null" >
        column_name = #{columnName,jdbcType=VARCHAR},
      </if>
      <if test="columnDesc != null" >
        column_desc = #{columnDesc,jdbcType=VARCHAR},
      </if>
      <if test="str1 != null" >
        	str1 = #{str1,jdbcType=VARCHAR},
      </if>
      <if test="addrName != null" >
        	addr_name = #{addrName,jdbcType=VARCHAR},
      </if>
      <if test="addrPid != null" >
       		addr_pid = #{addrPid,jdbcType=INTEGER},
      </if>
    </set>
    where detail_id = #{detailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yaochen.address.data.domain.address.AdTreeChangeDetail" >
    update ad_tree_change_detail
    set change_sn = #{changeSn,jdbcType=INTEGER},
      addr_level = #{addrLevel,jdbcType=INTEGER},
      change_type = #{changeType,jdbcType=VARCHAR},
      change_cause = #{changeCause,jdbcType=VARCHAR},
      change_optr_id = #{changeOptrId,jdbcType=VARCHAR},
      change_done_code = #{changeDoneCode,jdbcType=INTEGER},
      change_time = #{changeTime,jdbcType=TIMESTAMP},
      addr_id = #{addrId,jdbcType=INTEGER},
      old_value = #{oldValue,jdbcType=VARCHAR},
      new_value = #{newValue,jdbcType=VARCHAR},
      column_name = #{columnName,jdbcType=VARCHAR},
      str1 = #{str1,jdbcType=VARCHAR},
      addr_pid = #{addrPid,jdbcType=INTEGER},
      addr_name = #{addrName,jdbcType=VARCHAR},
      column_desc = #{columnDesc,jdbcType=VARCHAR}
    where detail_id = #{detailId,jdbcType=INTEGER}
  </update>
</mapper>