<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yaochen.address.data.mapper.std.StdDeviceMapper" >
  <resultMap id="BaseResultMap" type="com.yaochen.address.data.domain.std.StdDevice" >
    <id column="std_dev_id" property="stdDevId" jdbcType="INTEGER" />
    <result column="std_level" property="stdLevel" jdbcType="VARCHAR" />
    <result column="jd_name" property="jdName" jdbcType="VARCHAR" />
    <result column="jd_addr_id" property="jdAddrId" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="county_id" property="countyId" jdbcType="VARCHAR" />
    <result column="create_optr" property="createOptr" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <!-- 以下字段只用于查询 -->
    <result column="jdAddrName" property="jdAddrName" jdbcType="VARCHAR" />
    <result column="jdAddrFullName" property="jdAddrFullName" jdbcType="VARCHAR" />
    <result column="jdAddrStr1" property="jdAddrStr1" jdbcType="VARCHAR" />
    
  </resultMap>
  <sql id="Base_Column_List" >
    std_dev_id, std_level, jd_name, jd_addr_id, pid, county_id, create_optr, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from std_device
    where std_dev_id = #{stdDevId,jdbcType=INTEGER}
  </select>
  <!-- queryChildren -->
  <select id="queryChildren" resultMap="BaseResultMap" parameterType="com.yaochen.address.data.domain.std.StdDevice" >
	  SELECT t.std_dev_id,t. std_level,t. jd_name,t. jd_addr_id,t. pid,t. county_id,t. create_optr,t. create_time ,
	tr.addr_name jdAddrName,tr.addr_full_name jdAddrFullName,tr.str1 jdAddrStr1
	FROM std_device t ,ad_tree tr
    where  t.jd_addr_id = tr.addr_id 
    <if test="pid != null" >
        and t.pid = #{pid,jdbcType=INTEGER}
      </if>
      
      <if test="countyId != null and countyId != '' ">
      		and t.county_id = #{countyId,jdbcType=VARCHAR} 
      </if>
      
      <if test="countyIds!=null">
		    and t.county_id in <foreach item="item" index="index" collection="countyIds" open="(" separator="," close=")">#{item} </foreach>
	    </if>
      
      <if test="stdLevel != null" >
        and t.std_level = #{stdLevel,jdbcType=VARCHAR}
      </if>
      
      <if test="jdName != null and jdName != '' " >
        and t.jd_name like '%${jdName}%'
      </if>
      
      
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from std_device
    where std_dev_id = #{stdDevId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yaochen.address.data.domain.std.StdDevice" >
    insert into std_device (std_dev_id, std_level, jd_name, 
      jd_addr_id, pid, county_id, 
      create_optr, create_time
      )
    values (#{stdDevId,jdbcType=INTEGER}, #{stdLevel,jdbcType=VARCHAR}, #{jdName,jdbcType=VARCHAR}, 
      #{jdAddrId,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{countyId,jdbcType=VARCHAR}, 
      #{createOptr,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yaochen.address.data.domain.std.StdDevice" >
    insert into std_device
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stdDevId != null" >
        std_dev_id,
      </if>
      <if test="stdLevel != null" >
        std_level,
      </if>
      <if test="jdName != null" >
        jd_name,
      </if>
      <if test="jdAddrId != null" >
        jd_addr_id,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="countyId != null" >
        county_id,
      </if>
      <if test="createOptr != null" >
        create_optr,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stdDevId != null" >
        #{stdDevId,jdbcType=INTEGER},
      </if>
      <if test="stdLevel != null" >
        #{stdLevel,jdbcType=VARCHAR},
      </if>
      <if test="jdName != null" >
        #{jdName,jdbcType=VARCHAR},
      </if>
      <if test="jdAddrId != null" >
        #{jdAddrId,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="countyId != null" >
        #{countyId,jdbcType=VARCHAR},
      </if>
      <if test="createOptr != null" >
        #{createOptr,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yaochen.address.data.domain.std.StdDevice" >
    update std_device
    <set >
      <if test="stdLevel != null" >
        std_level = #{stdLevel,jdbcType=VARCHAR},
      </if>
      <if test="jdName != null" >
        jd_name = #{jdName,jdbcType=VARCHAR},
      </if>
      <if test="jdAddrId != null" >
        jd_addr_id = #{jdAddrId,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="countyId != null" >
        county_id = #{countyId,jdbcType=VARCHAR},
      </if>
      <if test="createOptr != null" >
        create_optr = #{createOptr,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where std_dev_id = #{stdDevId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yaochen.address.data.domain.std.StdDevice" >
    update std_device
    set std_level = #{stdLevel,jdbcType=VARCHAR},
      jd_name = #{jdName,jdbcType=VARCHAR},
      jd_addr_id = #{jdAddrId,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      county_id = #{countyId,jdbcType=VARCHAR},
      create_optr = #{createOptr,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
    where std_dev_id = #{stdDevId,jdbcType=INTEGER}
  </update>
</mapper>